name: shinewardrobe

services:
  postgres:
    image: postgres:15-alpine
    container_name: shinewardrobe-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shinewardrobe
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shinewardrobe"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shinewardrobe-net

  ollama:
    image: ollama/ollama:latest
    container_name: shinewardrobe-ai
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0:11434
    networks:
      - shinewardrobe-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shinewardrobe-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/shinewardrobe
      - JWT_SECRET=super-secret-key-123
      - JWT_EXPIRES_IN=7d
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2:1b
      - PORT=8080
      - NODE_ENV=development
      - CORS_ORIGIN=*
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shinewardrobe-net
    command: >
      sh -c "
        echo 'Aguardando banco de dados...' &&
        sleep 15 &&
        echo 'Executando migrations...' &&
        bun run migrate &&
        echo 'Iniciando backend...' &&
        bun --watch src/index.ts
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shinewardrobe-web
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - shinewardrobe-net
    command: >
      sh -c "
        echo 'Aguardando backend...' &&
        sleep 20 &&
        echo 'Iniciando frontend...' &&
        bun dev
      "

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local

networks:
  shinewardrobe-net:
    driver: bridge